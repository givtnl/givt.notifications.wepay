# This is a basic workflow to help you get started with Actions

name: Build and deploy Azure function app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches: [ main, develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set variables for develop
        if: endsWith(github.ref, '/develop')
        run: |
          echo 'FUNCTIONAPP=givt-debug-notifications-wepay' >> $GITHUB_ENV
          echo 'AZURE_CLIENT_ID=${{secrets.AZURE_CLIENT_ID_DEV}}' >> $GITHUB_ENV
          echo 'AZURE_CLIENT_SECRET=${{secrets.AZURE_CLIENT_SECRET_DEV}}' >> $GITHUB_ENV
          echo 'AZURE_TENANT_ID=${{secrets.AZURE_TENANT_ID_DEV}}' >> $GITHUB_ENV
          echo 'AZURE_SUBSCRIPTION_ID=${{secrets.AZURE_SUBSCRIPTION_ID_DEV}}' >> $GITHUB_ENV
      - name: Set variables for main
        if: endsWith(github.ref, '/main')
        run: |
          echo 'FUNCTIONAPP=givt-production-notifications-wepay' >> $GITHUB_ENV
          echo 'FUNCTIONAPP_US=givt-notifications-wepay-us' >> $GITHUB_ENV
          echo 'AZURE_CLIENT_ID=${{secrets.AZURE_CLIENT_ID_PROD}}' >> $GITHUB_ENV
          echo 'AZURE_CLIENT_SECRET=${{secrets.AZURE_CLIENT_SECRET_PROD}}' >> $GITHUB_ENV
          echo 'AZURE_TENANT_ID=${{secrets.AZURE_TENANT_ID_PROD}}' >> $GITHUB_ENV
          echo 'AZURE_SUBSCRIPTION_ID=${{secrets.AZURE_SUBSCRIPTION_ID_PROD}}' >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Add private key for private git repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PRIVATE_GIT_SSH_KEY }}
      - name: Accept host bitbucket.org
        run: ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts
      - name: Update submodules
        run: git submodule update --init --recursive
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Install Azure Function Core Tools v4
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list'
          sudo apt-get update && sudo apt-get install -y azure-functions-core-tools-4
      - name: Signin to Azure
        run: |
          az login --service-principal --tenant ${{env.AZURE_TENANT_ID}} -u ${{env.AZURE_CLIENT_ID}} -p ${{env.AZURE_CLIENT_SECRET}}
          az account set -s ${{env.AZURE_SUBSCRIPTION_ID}}
      - name: Deploy to Azure function
        run: |
          cd src/Givt.Notifications.WePay
          func azure functionapp publish ${{env.FUNCTIONAPP}}
          cd -
      - name: Deploy to Azure function US
        run: |
          cd src/Givt.Notifications.WePay
          func azure functionapp publish ${{env.FUNCTIONAPP_US}}
          cd -